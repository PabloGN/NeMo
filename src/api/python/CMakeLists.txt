FIND_PACKAGE(Boost REQUIRED COMPONENTS python)
FIND_PACKAGE(PythonLibs REQUIRED)

IF(WIN32)
	ADD_DEFINITIONS(-DBOOST_PYTHON_STATIC_LIB)
ENDIF(WIN32)
LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
INCLUDE_DIRECTORIES(
	${CMAKE_SOURCE_DIR}/src
	${CMAKE_BINARY_DIR}/src
	${Boost_INCLUDE_DIR}
	${PYTHON_INCLUDE_PATH}
)

LINK_STATIC_MSVCR()

SET(BUILD_SHARED_LIBS TRUE)

ADD_LIBRARY(nemo_py nemo_py.cpp)

SET_TARGET_PROPERTIES(nemo_py PROPERTIES PREFIX "")
SET_TARGET_PROPERTIES(nemo_py PROPERTIES OUTPUT_NAME "_nemo")
IF(WIN32)
	SET_TARGET_PROPERTIES(nemo_py PROPERTIES SUFFIX ".pyd")
ENDIF(WIN32)
TARGET_LINK_LIBRARIES(nemo_py nemo ${Boost_LIBRARIES} ${PYTHON_LIBRARY})

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/setup.py.in ${CMAKE_CURRENT_BINARY_DIR}/setup.py @ONLY)

IF(WIN32)
	SET(INSTALL_DIR Python)
	SET(PYPKGDIR ${INSTALL_DIR})
ELSEIF(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
	INCLUDE(GNUInstallDirs)
	FIND_PACKAGE(PythonInterp REQUIRED)

	SET(PYPKGDIR lib/python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}/dist-packages)
	SET(INSTALL_DIR ${PYPKGDIR}/nemo)

	ADD_CUSTOM_COMMAND(
		OUTPUT NeMo.egg-info
		COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/setup.py egg_info --egg-base=${CMAKE_CURRENT_BINARY_DIR}/
		MAIN_DEPENDENCY ${CMAKE_CURRENT_BINARY_DIR}/setup.py)

	ADD_CUSTOM_TARGET(nemo_egg ALL DEPENDS NeMo.egg-info)
	ADD_DEPENDENCIES(nemo_py nemo_egg)

	INSTALL(
		DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/NeMo.egg-info
		DESTINATION ${PYPKGDIR})
ELSE()
	SET(INSTALL_DIR share/nemo/python)
	SET(PYPKGDIR ${INSTALL_DIR})
ENDIF()

INSTALL(
	TARGETS nemo_py
	DESTINATION ${INSTALL_DIR})
INSTALL(
	FILES
		${CMAKE_CURRENT_BINARY_DIR}/setup.py
		${CMAKE_CURRENT_SOURCE_DIR}/example.py
	DESTINATION ${INSTALL_DIR})
INSTALL(
	FILES
		${CMAKE_CURRENT_SOURCE_DIR}/__init__.py
		${CMAKE_CURRENT_SOURCE_DIR}/wrappers.py
	DESTINATION ${PYPKGDIR}/nemo)
INSTALL(
	DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/utils/
	DESTINATION ${PYPKGDIR}/nemo/utils/)
